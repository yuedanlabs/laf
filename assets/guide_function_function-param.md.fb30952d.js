import{_ as e,c as n,x as s,a as t,t as o,U as l,o as p}from"./chunks/framework.6f6f51de.js";const m=JSON.parse('{"title":"云函数参数 返回值","description":"","frontmatter":{"title":"云函数参数 返回值"},"headers":[],"relativePath":"guide/function/function-param.md"}'),r={name:"guide/function/function-param.md"},c={id:"frontmatter-title",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),i=l(`<h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><p>在 <code>main</code> 函数中，可以通过第一个参数 <code>ctx</code> 来获取用户传递的请求信息。<br> 下面的例子可以读取前端传递的 Query 参数<code>username</code>：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">username</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样可以读取前端传递的 body 参数</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">body</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>ctx</code> 具有下面的一些内容：</p><table><thead><tr><th>属性</th><th>介绍</th></tr></thead><tbody><tr><td><code>ctx.requestId</code></td><td>当前请求的唯一 ID</td></tr><tr><td><code>ctx.method</code></td><td>当前请求的方法，如<code>GET</code>、<code>POST</code></td></tr><tr><td><code>ctx.headers</code></td><td>所有请求的 headers</td></tr><tr><td><code>ctx.auth</code></td><td>使用 Http Bearer Token 认证时，解析出的 token 值</td></tr><tr><td><code>ctx.query</code></td><td>当前请求的 query 参数</td></tr><tr><td><code>ctx.body</code></td><td>当前请求的 body 参数</td></tr><tr><td><code>ctx.response</code></td><td>HTTP 响应，和<code>express</code>的<code>Response</code>实例保持一致</td></tr><tr><td><code>ctx.socket</code></td><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket" target="_blank" rel="noreferrer">WebSocket</a> 实例</td></tr><tr><td><code>ctx.files</code></td><td>上传的文件 (<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/File" target="_blank" rel="noreferrer">File</a> 对象数组)</td></tr><tr><td><code>ctx.env</code></td><td>自定义的环境变量 (<a href="./env.html">env</a>)</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p>那我们如何把数据传给前端呢？很简单，只需要在云函数中 return 出去就可以了。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 这里用字符串示例，你可以返回任何数据类型。</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">这里是返回给前端的数据</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,10);function D(a,y,F,u,C,A){return p(),n("div",null,[s("h1",c,[t(o(a.$frontmatter.title)+" ",1),d]),i])}const h=e(r,[["render",D]]);export{m as __pageData,h as default};
