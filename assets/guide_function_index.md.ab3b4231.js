import{_ as e}from"./chunks/create-function.ca2c8ed3.js";import{_ as o,c as r,x as t,a as c,t as n,U as s,o as i}from"./chunks/framework.6f6f51de.js";const d="/assets/edit-cloudfunction.365fe928.png",p="/assets/run-cloudfunction.a532b8c7.png",l="/assets/publish-cloudfunction.ddee93eb.png",P=JSON.parse('{"title":"云函数入门","description":"","frontmatter":{"title":"云函数入门"},"headers":[],"relativePath":"guide/function/index.md"}'),u={name:"guide/function/index.md"},_={id:"frontmatter-title",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),h=s('<h2 id="云函数简介" tabindex="-1">云函数简介 <a class="header-anchor" href="#云函数简介" aria-label="Permalink to &quot;云函数简介&quot;">​</a></h2><p><code>Laf云函数</code>是运行在云端的 <code>JavaScript</code> 代码。</p><p>云函数可使用 <code>Typescript/JavaScript</code> 编写，无需管理服务器，在Web开发控制台在线编写、在线调试、一键保存即可运行后端代码。</p><p>可在无需购买和管理服务器的情况下，快速开发后端代码。并且自带数据库和对象存储，极大降低后端开发难度。</p><p>每个云函数都是一个单独的 <code>Typescript</code> 文件，Laf为云函数单独封装了 <code>@lafjs/cloud</code> 模块，以便于更加方便的编写云函数。</p><h2 id="创建云函数" tabindex="-1">创建云函数 <a class="header-anchor" href="#创建云函数" aria-label="Permalink to &quot;创建云函数&quot;">​</a></h2><p>创建并进入Laf应用后，点击页面左上角「函数」按钮,点击加号,添加云函数</p><p><img src="'+e+'" alt="create-function" data-fancybox="gallery"></p><p><strong>函数名</strong> : 一般以字母或_开头，可使用<code>字母 数字 - _</code>四种，函数名不可重复</p><p><strong>标签</strong> : 用来分类管理的，可通过标签名筛选云函数，可为每个云函数设置多个标签</p><p><strong>请求方式</strong> : 只有被勾选的请求方式才允许请求</p><p><strong>函数描述</strong> : 方便后续查看云函数的功能，相当于备注</p><p><strong>函数模板</strong> : 选择不同的函数模板可初始化不同的代码</p><h2 id="编辑云函数" tabindex="-1">编辑云函数 <a class="header-anchor" href="#编辑云函数" aria-label="Permalink to &quot;编辑云函数&quot;">​</a></h2><p>Laf自带 <code>Web IDE</code>，可直接在浏览器在线编辑、运行（调试）、发布云函数</p><p><img src="'+d+'" alt="edit-cloudfunction" data-fancybox="gallery"></p><h2 id="运行云函数" tabindex="-1">运行云函数 <a class="header-anchor" href="#运行云函数" aria-label="Permalink to &quot;运行云函数&quot;">​</a></h2><p>云函数编写后可直接运行调试,未发布的云函数也可以在此进行运行调试</p><p><img src="'+p+'" alt="run-cloudfunction" data-fancybox="gallery"></p><p>如在云函数中添加 <code>console.log</code> 打印日志的代码，运行后也会直接显示在Console控制台，同时也会将云函数的返回值打印在运行结果中。</p><p>可切换请求方式以及配置请求参数，默认是 <code>GET</code> 请求，此处显示的请求方式与勾选的请求方式有关。</p><h2 id="发布云函数" tabindex="-1">发布云函数 <a class="header-anchor" href="#发布云函数" aria-label="Permalink to &quot;发布云函数&quot;">​</a></h2><p>云函数发布后，才是正式生效。前端才可以进行请求。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>云函数修改的代码，会自动在当前浏览器中缓存，只有在发布后才是真正的保存以及生效！</strong></p></div><p><img src="'+l+'" alt="publish-cloudfunction" data-fancybox="gallery"></p>',25);function m(a,g,b,x,y,k){return i(),r("div",null,[t("h1",_,[c(n(a.$frontmatter.title)+" ",1),f]),h])}const S=o(u,[["render",m]]);export{P as __pageData,S as default};
